# DQL 명령어 설명
  - Data Query Language
  - 데이터베이스에서 검색하고 조회하는데 사용
  - DQL SELECT 문을 사용해서 데이터를 검색하고 필터링 하며 원하는 정보를 추출하는데 사용
  - 종류
    'SELECT : 데이블에서 데이터를 선택하고 반환, 필드목록, 테이블, 조건 및 정렬을 지정할 수 있음
    'FROM : SELECT 문에서 데이터를 검색할 대상 테이블을 지정
      예제코드) SELECT * FROM 테이블명;
    'WHERE: 검색결과를 필터링하기위한 조건을 지정, 특정 조건을 충족하는 행만 반환
      예제코드) SELECT 보기원하는 열 작성 FROM 테이블명 WHERE 조건작성;
    'GTOUP BY: 검색 결과를 그룹화하고 그룹단위로 데이터를 집계할 때 사용
      예제코드) SELECT 열의 이름, AVG(열이름) AS 표시하고싶은 열의 이름
              FROM 테이블명
              GROUP BY 집계할 열이름;
    'HAVING: GROUP BY와 함께 사용되며 그룹화된 데이터에 대한 조건을 지정
            조건을 충족하는 그룹만 반환
            예제코드) SELECT 열의 이름, AVG(열이름) AS 표시하고싶은 열의 이름
                    FROM 테이블명
                    GROUP BY 집계할 열이름;
                    HAVING AVG(열이름)>10.0; --조건지정
    'ORDER BY: 검색 결과를 정렬하기 위해 사용, 정열할 열 및 정렬 순서를 지정
             SELECT 열의 이름
             FROM 테이블명
             ORDER BY 열이름 DESC; OR ASC;
        --ASC는 오름차순(Default값)
        --DESC는 내림차순
    'UNION: 두 개이상의 SELECT문 결과를 결합해서 하나의 결과 집합으로 반환
          예제코드) SELECT 열이름 FROM 테이블1
                  UNION
                  SELECT 열이름 FROM 테이블2;
    'JOIN: 다수의 테이블을 연결하여 데이터를 결합하는데 사용, INNER JOIN, LEFT JOIN, RIGHT JOIN, FULL OUTER JOIN등 결합 유형이 다양함
          예제코드) SELECT o.orderID, c.CName
                  FROM order o
                  INNER JOIN customers ON o.C_ID = c.C_ID;
          'join내 다양한 조인문 설명작성
          INNER JOIN : 데이터베이스에서 여러 테이블 간의 관계를 설정하고 데이터를 결합하는데 사용. 두개 이상의 테이블을 연결하여 공통된 값을 기준으로 행 결합
                      일치하는 행만 반환(=join)
            예제코드) 부서와 직원테이블을 조인하여 각 직원의 부서 정보를 가져옴
                    select e.eno, e.ename, d.dname
                    from employee e
                    join department d on e.dno=d.dno;
          LEFT JOIN : 왼쪽 테이블(첫번째 테이블)의 모든 행을 포함
                      오른쪽 테이블에서 일치하는 행을 선택
                      왼쪽 테이블에 있는 모든 행이 결과 집합에 포함되고
                      오른쪽 테이블과 일치하는 행이 없으면 null 값이 포함
                      왼쪽 테이블의 모든 행을 반환
              예제코드) 모든 부서와 부서에 속한 직원을 가져오기, 만약에 부서에 속한 직원이 없는 경우에는 부서정보 포함하기
                      select d.dno, d.dname, e.eno, e.ename
                      from department d
                      left join employee e on d.dno=e.dno
          RIGHT JOIN : 오른쪽 테이블의 모든 행을 포함
                      왼쪽 테이블에서 일치하는 행을 선택
                      오른쪽 테이블에 있는 모든 행이 결과집합에 포함
                      왼쪽 테이블과 일치하는 행이 없으면 null값 포함
                      오른쪽 테이블의 모든 행을 반환
            예제코드) 모든 직원과 직원이 속한 부서 정보 가져오기, 부서에 속하지 않은 경우도 직원정보 포함
                    select e.eno, e.ename, d.dno, d.dname
                    from employee e
                    right join department d on e.dno=d.dno;
          FULL JOIN(FULL OUTER JOIN) : 왼쪽 테이블과 오른쪽 테이블의 모든 행을 포함. 양쪽 테이블의 모든 데이터를 모두 가져옴
                                      일치하는 행이 있는 경우에는 해당 데이터를 포함
                                      왼쪽테이블 또는 오른쪽 테이블의 한쪽에만 있는 데이터는 null 값이 포함됨
                                      주로 양쪽 테이블의 모든 데이터를 가져와야할때 사용
                                      양쪽 테이블의 모든 행을 반환
            예제코드)
                select d.dno, d.name, e.eno, e.ename
                from department d
                full join employee on d.dno=e.dno;
